(function(){typeof process=="object"&&require("mocha-jsdom")();var r=this,t=(r.chai||require("chai")).assert;describe("NProgress",function(){var s,e;beforeEach(function(){s=r.jQuery||require("jquery"),e=r.NProgress||require("../nprogress"),this.settings=s.extend({},e.settings)}),afterEach(function(){s("#nprogress").remove(),s("html").attr("class",""),e.status=null,s.extend(e.settings,this.settings)}),describe(".set()",function(){it(".set(0) must render",function(n){e.set(0),t.equal(s("#nprogress").length,1),t.equal(s("#nprogress .bar").length,1),t.equal(s("#nprogress .peg").length,1),t.equal(s("#nprogress .spinner").length,1),n()}),it(".set(1) should appear and disappear",function(n){e.configure({speed:10}),e.set(0).set(1),t.equal(s("#nprogress").length,1),setTimeout(function(){t.equal(s("#nprogress").length,0),n()},70)}),it("must respect minimum",function(){e.set(0),t.equal(e.status,e.settings.minimum)}),it("must clamp to minimum",function(){e.set(-100),t.equal(e.status,e.settings.minimum)}),it("must clamp to maximum",function(){e.set(456),t.equal(e.status,null)})}),describe(".start()",function(){it("must render",function(n){e.start(),t.equal(s("#nprogress").length,1),n()}),it("must respect minimum",function(){e.start(),t.equal(e.status,e.settings.minimum)}),it("must be attached to specified parent",function(){var n=s("<div>",{id:"test"}).appendTo("body");e.configure({parent:"#test"}),e.start(),t.isTrue(s("#nprogress").parent().is(n)),t.isTrue(s(e.settings.parent).hasClass("nprogress-custom-parent"))})}),describe(".done()",function(){it("must not render without start",function(n){e.done(),t.equal(s("#nprogress").length,0),n()}),it(".done(true) must render",function(n){e.done(!0),t.equal(s("#nprogress").length,1),n()})}),describe(".remove()",function(){it("should be removed from the parent",function(){e.set(1),e.remove();var n=s(e.settings.parent);t.isFalse(n.hasClass("nprogress-custom-parent")),t.equal(n.find("#nprogress").length,0)})}),describe(".inc()",function(){it("should render",function(){e.inc(),t.equal(s("#nprogress").length,1)}),it("should start with minimum",function(){e.inc(),t.equal(e.status,e.settings.minimum)}),it("should increment",function(){e.start();var n=e.status;e.inc(),t.operator(e.status,">",n)}),it("should never reach 1.0",function(){for(var n=0;n<100;++n)e.inc();t.operator(e.status,"<",1)})}),describe(".configure()",function(){it("should work",function(){e.configure({minimum:.5}),t.equal(e.settings.minimum,.5)})}),describe(".configure(showSpinner)",function(){it("should render spinner by default",function(){e.start(),t.equal(s("#nprogress .spinner").length,1)}),it("should be true by default",function(){t.equal(e.settings.showSpinner,!0)}),it("should hide (on false)",function(){e.configure({showSpinner:!1}),e.start(),t.equal(s("#nprogress .spinner").length,0)})})})})();
